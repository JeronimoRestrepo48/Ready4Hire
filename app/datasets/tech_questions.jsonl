{"type": "technical", "role": "DevOps", "level": "junior", "years": 1, "knowledge": ["Docker"], "tools": ["Docker"], "question": "¿Para qué sirve Docker?", "answer": "Permite crear, desplegar y ejecutar aplicaciones en contenedores aislados."}
{"type": "technical", "role": "DevOps", "level": "senior", "years": 5, "knowledge": ["Kubernetes", "CI/CD"], "tools": ["Jenkins", "AWS"], "question": "¿Cómo automatizarías un despliegue blue/green en AWS usando Jenkins y Docker?", "answer": "Configuro pipelines en Jenkins, uso Docker para empaquetar la app y scripts de AWS para alternar entornos blue/green."}
{"type": "technical", "role": "Backend", "level": "junior", "years": 1, "knowledge": ["Bases de datos SQL"], "tools": ["PostgreSQL"], "question": "¿Qué es una base de datos relacional?", "answer": "Es un sistema que organiza datos en tablas relacionadas entre sí mediante claves primarias y foráneas."}
{"type": "technical", "role": "Backend", "level": "senior", "years": 6, "knowledge": ["Microservicios", "API Design"], "tools": ["Spring Boot", "GraphQL"], "question": "¿Cómo diseñarías una API RESTful escalable?", "answer": "Usando principios de diseño REST, autenticación JWT y caché para mejorar el rendimiento."}
{"type": "technical", "role": "Backend", "level": "junior", "years": 1, "knowledge": ["APIs", "REST"], "tools": ["Postman"], "question": "¿Qué es una API REST?", "answer": "Una interfaz que permite la comunicación entre sistemas usando HTTP y operaciones CRUD."}
{"type": "technical", "role": "Backend", "level": "senior", "years": 7, "knowledge": ["Microservicios", "Seguridad"], "tools": ["JWT", "Redis"], "question": "¿Cómo diseñarías una API escalable y segura para millones de usuarios?", "answer": "Usando autenticación JWT, rate limiting, caché distribuido y arquitectura basada en microservicios."}
{"type": "technical", "role": "Frontend", "level": "junior", "years": 1, "knowledge": ["HTML", "CSS"], "tools": ["VSCode"], "question": "¿Qué es el DOM?", "answer": "Es la representación en memoria de la estructura de una página web."}
{"type": "technical", "role": "Frontend", "level": "senior", "years": 6, "knowledge": ["SPA", "Performance"], "tools": ["React", "Webpack"], "question": "¿Cómo optimizarías el performance de una SPA compleja?", "answer": "Dividiendo el código en chunks, lazy loading, memoización y uso eficiente del virtual DOM."}
{"type": "technical", "role": "IA", "level": "junior", "years": 2, "knowledge": ["Aprendizaje supervisado"], "tools": ["scikit-learn"], "question": "¿Qué es el aprendizaje supervisado?", "answer": "Es un tipo de aprendizaje automático donde el modelo se entrena con datos etiquetados."}
{"type": "technical", "role": "IA", "level": "senior", "years": 8, "knowledge": ["Deep Learning", "Optimización"], "tools": ["TensorFlow", "PyTorch"], "question": "¿Cómo optimizarías el rendimiento de un modelo de deep learning en producción?", "answer": "Aplicando técnicas como quantization, pruning, batch inference y monitoreo de drift."}
{"type": "technical", "role": "Ciberseguridad", "level": "junior", "years": 1, "knowledge": ["Firewalls"], "tools": ["pfSense"], "question": "¿Qué es un firewall?", "answer": "Es un sistema que filtra el tráfico de red para permitir o bloquear conexiones según reglas definidas."}
{"type": "technical", "role": "Ciberseguridad", "level": "senior", "years": 10, "knowledge": ["IDS", "Snort"], "tools": ["Snort", "Wireshark"], "question": "¿Cómo implementarías un sistema de detección de intrusos (IDS) en una red corporativa?", "answer": "Seleccionando herramientas como Snort, configurando reglas personalizadas y monitoreando alertas en tiempo real."}
{"type": "technical", "role": "Infraestructura", "level": "junior", "years": 1, "knowledge": ["Redes"], "tools": ["Cisco Packet Tracer"], "question": "¿Qué es una VLAN?", "answer": "Es una red lógica que segmenta dispositivos dentro de una red física para mejorar la seguridad y el rendimiento."}
{"type": "technical", "role": "Infraestructura", "level": "senior", "years": 12, "knowledge": ["Alta disponibilidad"], "tools": ["F5", "Nagios"], "question": "¿Cómo asegurarías la alta disponibilidad en un data center?", "answer": "Implementando redundancia, balanceadores de carga, backups y monitoreo proactivo."}
{"type": "technical", "role": "QA", "level": "junior", "years": 1, "knowledge": ["Pruebas unitarias"], "tools": ["JUnit"], "question": "¿Qué es una prueba unitaria?", "answer": "Es una prueba que valida el funcionamiento de una unidad mínima de código, como una función o método."}
{"type": "technical", "role": "QA", "level": "senior", "years": 8, "knowledge": ["Automatización", "CI"], "tools": ["Selenium", "Jenkins"], "question": "¿Cómo implementarías pruebas automatizadas en un pipeline CI/CD?", "answer": "Integrando scripts de Selenium en el pipeline de Jenkins para ejecutar pruebas en cada build."}
{"type": "technical", "role": "Data Engineer", "level": "junior", "years": 2, "knowledge": ["ETL"], "tools": ["Airflow"], "question": "¿Qué es un proceso ETL?", "answer": "Es el proceso de extraer, transformar y cargar datos desde diferentes fuentes a un destino."}
{"type": "technical", "role": "Data Engineer", "level": "senior", "years": 9, "knowledge": ["Big Data", "Spark"], "tools": ["Apache Spark", "Kafka"], "question": "¿Cómo diseñarías un pipeline de datos en tiempo real?", "answer": "Usando Kafka para ingesta y Spark Streaming para procesamiento en tiempo real."}
{"type": "technical", "role": "Soporte", "level": "junior", "years": 1, "knowledge": ["Sistemas operativos"], "tools": ["Windows", "Linux"], "question": "¿Cómo reiniciarías un servicio en Linux?", "answer": "Usando el comando systemctl restart <servicio>."}
{"type": "technical", "role": "Soporte", "level": "senior", "years": 15, "knowledge": ["Diagnóstico", "Redes"], "tools": ["Wireshark", "Ping"], "question": "¿Cómo diagnosticarías una caída de red en una sucursal remota?", "answer": "Verificando conectividad, usando ping, revisando logs y analizando tráfico con Wireshark."}
{"type": "technical", "role": "Fullstack", "level": "junior", "years": 2, "knowledge": ["Frontend", "Backend"], "tools": ["Node.js", "React"], "question": "¿Qué es una aplicación fullstack?", "answer": "Una aplicación que integra tanto el frontend como el backend en una sola solución."}
{"type": "technical", "role": "Fullstack", "level": "senior", "years": 10, "knowledge": ["Microservicios", "DevOps"], "tools": ["Docker", "Kubernetes"], "question": "¿Cómo migrarías una app monolítica a microservicios?", "answer": "Dividiendo la app en servicios independientes, usando Docker para contenerización y Kubernetes para orquestación."}
{"type": "technical", "role": "Cloud Engineer", "level": "junior", "years": 1, "knowledge": ["AWS", "Azure"], "tools": ["AWS CLI"], "question": "¿Cómo crearías una instancia EC2 en AWS?", "answer": "Usando el comando 'aws ec2 run-instances' con los parámetros necesarios."}
{"type": "technical", "role": "Cloud Engineer", "level": "senior", "years": 6, "knowledge": ["Arquitectura en la nube"], "tools": ["Terraform", "Kubernetes"], "question": "¿Cómo implementarías una infraestructura como código en AWS?", "answer": "Usando Terraform para definir y provisionar recursos de AWS de manera declarativa."}
{"type": "technical", "role": "Mobile Developer", "level": "junior", "years": 1, "knowledge": ["Android", "iOS"], "tools": ["Android Studio", "Xcode"], "question": "¿Qué es una aplicación nativa?", "answer": "Es una aplicación desarrollada específicamente para un sistema operativo móvil, como Android o iOS."}
{"type": "technical", "role": "Mobile Developer", "level": "senior", "years": 5, "knowledge": ["Flutter", "React Native"], "tools": ["Flutter SDK", "React Native CLI"], "question": "¿Cómo elegirías entre Flutter y React Native para un nuevo proyecto?", "answer": "Evaluando factores como el equipo, la comunidad, el rendimiento y las características específicas del proyecto."}
{"type": "technical", "role": "Data Scientist", "level": "junior", "years": 1, "knowledge": ["Python", "Pandas"], "tools": ["Jupyter Notebook"], "question": "¿Cómo cargarías un dataset en Pandas?", "answer": "Usando el comando 'pd.read_csv('ruta/dataset.csv')'."}
{"type": "technical", "role": "Data Scientist", "level": "senior", "years": 7, "knowledge": ["Machine Learning", "Modelos"], "tools": ["scikit-learn", "TensorFlow"], "question": "¿Cómo evaluarías el rendimiento de un modelo de machine learning?", "answer": "Usando métricas como precisión, recall, F1-score y curvas ROC."}
{"type": "technical", "role": "Security Analyst", "level": "junior", "years": 1, "knowledge": ["Análisis de vulnerabilidades"], "tools": ["Nessus"], "question": "¿Cómo realizarías un escaneo de vulnerabilidades en una red?", "answer": "Usando herramientas como Nessus para identificar y reportar vulnerabilidades en los sistemas."}
{"type": "technical", "role": "Security Analyst", "level": "senior", "years": 8, "knowledge": ["Forense digital"], "tools": ["EnCase", "FTK"], "question": "¿Cómo llevarías a cabo una investigación forense digital?", "answer": "Recolectando evidencia, preservando la cadena de custodia y analizando datos con herramientas forenses."}
{"type": "technical", "role": "DevOps", "level": "mid", "years": 3, "knowledge": ["CI/CD", "Monitorización"], "tools": ["GitLab CI", "Prometheus"], "question": "¿Cómo integrarías monitoreo en un pipeline CI/CD?", "answer": "Agregando pasos al pipeline que verifiquen métricas con Prometheus después de cada despliegue."}
{"type": "technical", "role": "Backend", "level": "mid", "years": 4, "knowledge": ["ORM", "APIs"], "tools": ["Django", "PostgreSQL"], "question": "¿Qué ventajas ofrece un ORM como Django?", "answer": "Permite manipular bases de datos usando objetos Python, lo que acelera el desarrollo y reduce errores de SQL."}
{"type": "technical", "role": "Frontend", "level": "junior", "years": 1, "knowledge": ["JavaScript", "Eventos"], "tools": ["Chrome DevTools"], "question": "¿Cómo funciona el modelo de eventos en JavaScript?", "answer": "Permite responder a acciones del usuario como clics mediante listeners que ejecutan funciones."}
{"type": "technical", "role": "Frontend", "level": "mid", "years": 3, "knowledge": ["State Management"], "tools": ["Vuex", "Vue.js"], "question": "¿Cómo manejarías el estado en una aplicación Vue?", "answer": "Usando Vuex para centralizar y controlar el estado de los componentes de forma reactiva."}
{"type": "technical", "role": "IA", "level": "senior", "years": 9, "knowledge": ["Model Deployment"], "tools": ["FastAPI", "ONNX"], "question": "¿Cómo desplegarías un modelo de IA optimizado para producción?", "answer": "Convertiría el modelo a ONNX y lo serviría con FastAPI en un contenedor ligero."}
{"type": "technical", "role": "Data Engineer", "level": "senior", "years": 10, "knowledge": ["Data Lake", "Integración de datos"], "tools": ["AWS Glue", "S3"], "question": "¿Cómo integrarías datos de múltiples fuentes en un data lake?", "answer": "Usando AWS Glue para extraer, transformar y cargar datos estructurados y no estructurados en S3."}
{"type": "technical", "role": "QA", "level": "mid", "years": 4, "knowledge": ["TDD", "Pruebas automatizadas"], "tools": ["Cypress", "Mocha"], "question": "¿Cómo aplicarías TDD en el desarrollo web?", "answer": "Escribiendo primero pruebas automatizadas en Cypress y desarrollando el código hasta que pasen."}
{"type": "technical", "role": "QA", "level": "senior", "years": 7, "knowledge": ["Testing de performance"], "tools": ["JMeter", "Gatling"], "question": "¿Cómo medirías el rendimiento de una API?", "answer": "Usando herramientas como JMeter para simular carga y analizar tiempos de respuesta y errores."}
{"type": "technical", "role": "Infraestructura", "level": "mid", "years": 5, "knowledge": ["Virtualización", "Redes"], "tools": ["VMware", "pfSense"], "question": "¿Cómo aislarías entornos en una red virtualizada?", "answer": "Usando VLANs configuradas desde pfSense y máquinas virtuales aisladas en VMware."}
{"type": "technical", "role": "Soporte", "level": "junior", "years": 1, "knowledge": ["Hardware", "Diagnóstico"], "tools": ["MemTest86", "HWMonitor"], "question": "¿Cómo diagnosticarías problemas de hardware?", "answer": "Ejecutando pruebas de memoria con MemTest86 y monitoreando temperaturas con HWMonitor."}
{"type": "technical", "role": "Security Analyst", "level": "mid", "years": 4, "knowledge": ["Pentesting", "Reconocimiento"], "tools": ["nmap", "Burp Suite"], "question": "¿Cómo inicias una prueba de penetración?", "answer": "Primero realizo un escaneo de red con nmap y luego testeo endpoints con Burp Suite."}
{"type": "technical", "role": "Security Analyst", "level": "senior", "years": 12, "knowledge": ["Mitigación de amenazas", "Threat Intelligence"], "tools": ["MISP", "Splunk"], "question": "¿Cómo responderías ante un IOC detectado en logs?", "answer": "Correlaciono eventos en Splunk y cruzo con indicadores en MISP para decidir mitigaciones."}
{"type": "technical", "role": "Cloud Engineer", "level": "mid", "years": 4, "knowledge": ["GCP", "Contenedores"], "tools": ["Google Cloud Run", "Cloud Build"], "question": "¿Cómo desplegarías una app containerizada en GCP?", "answer": "Subo la imagen a Container Registry y la despliego con Cloud Run tras compilar con Cloud Build."}
{"type": "technical", "role": "Mobile Developer", "level": "mid", "years": 3, "knowledge": ["UI/UX", "Performance"], "tools": ["Android Studio", "LeakCanary"], "question": "¿Cómo mejorarías el rendimiento de una app Android?", "answer": "Reduciendo vistas anidadas, optimizando imágenes y detectando fugas de memoria con LeakCanary."}
{"type": "technical", "role": "Mobile Developer", "level": "senior", "years": 6, "knowledge": ["CI/CD mobile", "Testing"], "tools": ["Bitrise", "Firebase Test Lab"], "question": "¿Cómo automatizarías tests de una app móvil?", "answer": "Integrando Firebase Test Lab en un pipeline Bitrise para ejecutar tests en dispositivos reales."}
{"type": "technical", "role": "Fullstack", "level": "mid", "years": 5, "knowledge": ["APIs", "Autenticación"], "tools": ["Next.js", "Keycloak"], "question": "¿Cómo implementarías autenticación SSO en una app?", "answer": "Usaría Keycloak como proveedor de identidad y Next.js para consumir tokens con OAuth2."}
{"type": "technical", "role": "Data Scientist", "level": "mid", "years": 3, "knowledge": ["Feature Engineering"], "tools": ["Pandas", "Scikit-learn"], "question": "¿Qué técnicas usas para generar features útiles?", "answer": "Aplico normalización, codificación categórica y extracción de características temporales o textuales."}
{"type": "technical", "role": "IA", "level": "mid", "years": 4, "knowledge": ["NLP", "Modelos preentrenados"], "tools": ["spaCy", "HuggingFace"], "question": "¿Cómo harías fine-tuning de un modelo NLP?", "answer": "Cargo un modelo de HuggingFace y lo entreno con mis datos usando una capa de clasificación personalizada."}
{"type": "technical", "role": "Backend", "level": "mid", "years": 3, "knowledge": ["Eventos", "Mensajería"], "tools": ["RabbitMQ", "Node.js"], "question": "¿Cómo implementarías una arquitectura basada en eventos?", "answer": "Usando RabbitMQ como broker de mensajes y Node.js para publicar y consumir eventos."}
{"type": "technical", "role": "DevOps", "level": "senior", "years": 8, "knowledge": ["Observabilidad", "SRE"], "tools": ["Grafana", "Loki"], "question": "¿Cómo implementarías observabilidad completa en producción?", "answer": "Recolectando logs con Loki, métricas con Prometheus y visualizando todo en Grafana."}
{"type": "technical", "role": "Frontend", "level": "senior", "years": 7, "knowledge": ["SSR", "Rendimiento"], "tools": ["Next.js", "Lighthouse"], "question": "¿Cómo mejorarías el SEO de una SPA?", "answer": "Usando server-side rendering con Next.js y auditando performance y accesibilidad con Lighthouse."}
{"type": "technical", "role": "QA", "level": "junior", "years": 1, "knowledge": ["Pruebas funcionales"], "tools": ["TestRail"], "question": "¿Qué es una prueba funcional?", "answer": "Una prueba que valida que una funcionalidad del sistema cumpla con los requisitos establecidos."}
{"type": "technical", "role": "Soporte", "level": "mid", "years": 3, "knowledge": ["Automatización"], "tools": ["Ansible"], "question": "¿Cómo automatizarías tareas repetitivas en servidores?", "answer": "Creando playbooks con Ansible para ejecutar tareas de configuración y mantenimiento de forma remota."}
{"type": "technical", "role": "Data Engineer", "level": "junior", "years": 2, "knowledge": ["Data Wrangling"], "tools": ["Pandas"], "question": "¿Cómo limpiarías un dataset con valores faltantes?", "answer": "Usando Pandas para identificar, imputar o eliminar valores nulos según el contexto del análisis."}
{"type": "technical", "role": "Cloud Engineer", "level": "junior", "years": 1, "knowledge": ["Contenedores", "Orquestación"], "tools": ["ECS", "Fargate"], "question": "¿Qué es AWS Fargate?", "answer": "Es un servicio que permite ejecutar contenedores sin administrar servidores."}
{"type": "technical", "role": "Security Analyst", "level": "mid", "years": 5, "knowledge": ["Seguridad en la nube"], "tools": ["AWS GuardDuty"], "question": "¿Cómo detectarías actividad sospechosa en AWS?", "answer": "Habilitando AWS GuardDuty para monitorear eventos y generar alertas automatizadas."}
{"type": "technical", "role": "IA", "level": "junior", "years": 1, "knowledge": ["Clasificación"], "tools": ["scikit-learn"], "question": "¿Cómo entrenarías un modelo de clasificación?", "answer": "Divido el dataset, selecciono un modelo, lo entreno con fit() y evalúo con métricas como accuracy."}
{"type": "technical", "role": "Fullstack", "level": "junior", "years": 2, "knowledge": ["REST", "DB"], "tools": ["Express.js", "MongoDB"], "question": "¿Cómo conectarías una API REST a una base de datos?", "answer": "Usando un controlador Express que interactúe con MongoDB a través de un ODM como Mongoose."}
{"type": "technical", "role": "DevOps", "level": "mid", "years": 3, "knowledge": ["Observabilidad", "Logs"], "tools": ["Grafana", "Prometheus"], "question": "¿Cómo implementarías observabilidad en una arquitectura distribuida?", "answer": "Utilizaría Prometheus para métricas, Grafana para visualización y centralización de logs con ELK o Loki."}
{"type": "technical", "role": "Backend", "level": "mid", "years": 4, "knowledge": ["Patrones de diseño"], "tools": ["Java", "Spring"], "question": "¿Qué patrón usarías para desacoplar la lógica de negocio?", "answer": "El patrón Strategy permite separar comportamientos y facilitar la extensión sin modificar el código base."}
{"type": "technical", "role": "Frontend", "level": "junior", "years": 1, "knowledge": ["Accesibilidad"], "tools": ["HTML5", "ARIA"], "question": "¿Cómo haces que una web sea accesible?", "answer": "Uso etiquetas semánticas, atributos ARIA y testeo con herramientas como Lighthouse."}
{"type": "technical", "role": "IA", "level": "mid", "years": 4, "knowledge": ["Evaluación de modelos"], "tools": ["scikit-learn"], "question": "¿Qué es overfitting y cómo evitarlo?", "answer": "Es cuando un modelo se ajusta demasiado al set de entrenamiento. Se evita con regularización, cross-validation y más datos."}
{"type": "technical", "role": "Ciberseguridad", "level": "junior", "years": 1, "knowledge": ["Autenticación"], "tools": ["OAuth2"], "question": "¿Qué es OAuth2?", "answer": "Es un protocolo de autorización que permite a una app acceder a recursos protegidos sin compartir credenciales."}
{"type": "technical", "role": "Infraestructura", "level": "mid", "years": 5, "knowledge": ["Networking", "VPN"], "tools": ["OpenVPN"], "question": "¿Cómo asegurarías el acceso remoto a una red interna?", "answer": "Configurando una VPN con cifrado fuerte y autenticación multifactor."}
{"type": "technical", "role": "QA", "level": "junior", "years": 1, "knowledge": ["TDD"], "tools": ["Mocha", "Chai"], "question": "¿Qué es TDD?", "answer": "Test Driven Development es una metodología donde primero se escriben los tests y luego el código para pasarlos."}
{"type": "technical", "role": "Data Engineer", "level": "junior", "years": 2, "knowledge": ["Data Warehousing"], "tools": ["BigQuery"], "question": "¿Qué es un data warehouse?", "answer": "Es un sistema diseñado para consultas analíticas sobre grandes volúmenes de datos históricos."}
{"type": "technical", "role": "Soporte", "level": "mid", "years": 6, "knowledge": ["Scripting"], "tools": ["Bash"], "question": "¿Cómo automatizarías una tarea repetitiva en Linux?", "answer": "Escribiendo un script Bash y programándolo con cron para su ejecución periódica."}
{"type": "technical", "role": "Fullstack", "level": "mid", "years": 5, "knowledge": ["State management"], "tools": ["Vuex", "Redux"], "question": "¿Cómo manejas el estado en aplicaciones grandes?", "answer": "Uso herramientas como Redux o Vuex para centralizar y sincronizar el estado de la app."}
{"type": "technical", "role": "Cloud Engineer", "level": "mid", "years": 5, "knowledge": ["Contenedores"], "tools": ["ECS", "Fargate"], "question": "¿Qué ventaja tiene usar Fargate sobre EC2?", "answer": "Fargate elimina la necesidad de gestionar servidores, facilitando la escalabilidad automática."}
{"type": "technical", "role": "Mobile Developer", "level": "junior", "years": 1, "knowledge": ["UI móvil"], "tools": ["Flutter"], "question": "¿Qué es un widget en Flutter?", "answer": "Es un componente reutilizable de la interfaz que representa una parte de la app móvil."}
{"type": "technical", "role": "Data Scientist", "level": "mid", "years": 5, "knowledge": ["Pipelines"], "tools": ["MLflow"], "question": "¿Cómo versionas tus experimentos de ML?", "answer": "Uso MLflow para trackear parámetros, métricas y versiones del modelo de manera reproducible."}
{"type": "technical", "role": "Security Analyst", "level": "mid", "years": 6, "knowledge": ["Threat Hunting"], "tools": ["Splunk", "Zeek"], "question": "¿Qué haces durante una actividad de threat hunting?", "answer": "Busco patrones anómalos en logs y tráfico para identificar amenazas avanzadas antes de que actúen."}
{"type": "technical", "role": "DevOps", "level": "senior", "years": 10, "knowledge": ["Infraestructura como código"], "tools": ["Pulumi"], "question": "¿Qué diferencia a Pulumi de Terraform?", "answer": "Pulumi permite definir infra usando lenguajes como Python o TypeScript en lugar de HCL."}
{"type": "technical", "role": "Frontend", "level": "mid", "years": 4, "knowledge": ["Web Components"], "tools": ["LitElement"], "question": "¿Qué son los Web Components?", "answer": "Son estándares que permiten crear componentes encapsulados y reutilizables sin frameworks."}
{"type": "technical", "role": "Backend", "level": "senior", "years": 10, "knowledge": ["Caching"], "tools": ["Redis", "Varnish"], "question": "¿Cómo mejorarías la latencia de una API muy usada?", "answer": "Implementando cacheo de respuestas, precálculo de datos y compresión HTTP."}
{"type": "technical", "role": "QA", "level": "mid", "years": 5, "knowledge": ["BDD"], "tools": ["Cucumber"], "question": "¿Qué es BDD?", "answer": "Behavior Driven Development usa lenguaje natural para definir comportamientos esperados antes del desarrollo."}
{"type": "technical", "role": "Cloud Engineer", "level": "junior", "years": 1, "knowledge": ["Seguridad en la nube"], "tools": ["IAM AWS"], "question": "¿Qué es IAM en AWS?", "answer": "Es el servicio de gestión de identidades y accesos que controla qué puede hacer cada usuario o servicio."}
{"type": "technical", "role": "Data Scientist", "level": "junior", "years": 1, "knowledge": ["NLP"], "tools": ["spaCy"], "question": "¿Qué es el POS tagging?", "answer": "Es la tarea de etiquetar cada palabra de un texto con su categoría gramatical (sustantivo, verbo, etc)."}
{"type": "technical", "role": "IA", "level": "senior", "years": 9, "knowledge": ["LLM", "Prompt Engineering"], "tools": ["OpenAI API"], "question": "¿Cómo optimizas los prompts para tareas complejas?", "answer": "Uso ejemplos (few-shot), instrucciones claras y ajusto el contexto para mejorar la precisión del modelo."}
{"type": "technical", "role": "Soporte", "level": "junior", "years": 1, "knowledge": ["Monitoreo"], "tools": ["Zabbix"], "question": "¿Cómo sabrías si un servidor está sobrecargado?", "answer": "Revisando el uso de CPU, memoria y disco a través de herramientas de monitoreo como Zabbix."}
{"type": "technical", "role": "Mobile Developer", "level": "mid", "years": 4, "knowledge": ["APIs móviles"], "tools": ["Retrofit"], "question": "¿Qué es Retrofit en Android?", "answer": "Es una librería que simplifica las llamadas HTTP desde una app Android mediante interfaces."}
{"type": "technical", "role": "Fullstack", "level": "junior", "years": 2, "knowledge": ["API REST", "Bases de datos"], "tools": ["Node.js", "MongoDB"], "question": "¿Cómo conectas un backend en Node.js con MongoDB?", "answer": "Uso Mongoose u otro ODM para definir esquemas y realizar operaciones CRUD sobre la base de datos."}

@page "/settings"
@using Ready4Hire.Services
@inject AuthService AuthService
@inject FileUploadService FileUploadService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>⚙️ Configuración - Ready4Hire</PageTitle>

<div class="settings-modern-container">
    <div class="settings-header-modern">
        <div class="header-icon">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none">
                <circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="2"/>
                <path d="M12 1V3M12 21V23M4.22 4.22L5.64 5.64M18.36 18.36L19.78 19.78M1 12H3M21 12H23M4.22 19.78L5.64 18.36M18.36 5.64L19.78 4.22" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
            </svg>
        </div>
        <h1>⚙️ Configuración</h1>
        <p>Personaliza tu experiencia en Ready4Hire</p>
    </div>

    <div class="settings-content-modern">
        <!-- Notifications Section -->
        <div class="setting-card">
            <div class="setting-card-header">
                <div class="setting-icon">🔔</div>
                <h3>Notificaciones</h3>
            </div>
            <div class="setting-items">
                <div class="setting-item-modern">
                    <div class="setting-info">
                        <label class="setting-label">Alertas de entrevistas</label>
                        <span class="setting-description">Recibe notificaciones cuando tengas nuevas preguntas</span>
                    </div>
                    <label class="switch">
                        <input type="checkbox" />
                        <span class="slider"></span>
                    </label>
                </div>
                <div class="setting-item-modern">
                    <div class="setting-info">
                        <label class="setting-label">Progreso y logros</label>
                        <span class="setting-description">Te avisaremos cuando desbloquees nuevos logros</span>
                    </div>
                    <label class="switch">
                        <input type="checkbox" checked />
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
        </div>

        <!-- Interview Preferences -->
        <div class="setting-card">
            <div class="setting-card-header">
                <div class="setting-icon">🎯</div>
                <h3>Preferencias de Entrevista</h3>
            </div>
            <div class="setting-items">
                <div class="setting-item-modern">
                    <div class="setting-info">
                        <label class="setting-label">Modo predeterminado</label>
                        <span class="setting-description">Selecciona el modo de entrevista por defecto</span>
                    </div>
                    <select class="select-modern">
                        <option value="practice">Práctica</option>
                        <option value="exam">Examen</option>
                        <option value="technical">Técnica</option>
                    </select>
                </div>
                <div class="setting-item-modern">
                    <div class="setting-info">
                        <label class="setting-label">Dificultad predeterminada</label>
                        <span class="setting-description">Nivel de dificultad inicial</span>
                    </div>
                    <select class="select-modern">
                        <option value="easy">Fácil</option>
                        <option value="medium">Medio</option>
                        <option value="hard">Difícil</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Appearance -->
        <div class="setting-card">
            <div class="setting-card-header">
                <div class="setting-icon">🎨</div>
                <h3>Apariencia</h3>
            </div>
            <div class="setting-items">
                <div class="setting-item-modern">
                    <div class="setting-info">
                        <label class="setting-label">Modo oscuro</label>
                        <span class="setting-description">Tema oscuro para mejor experiencia visual</span>
                    </div>
                    <label class="switch">
                        <input type="checkbox" checked />
                        <span class="slider"></span>
                    </label>
                </div>
                <div class="setting-item-modern">
                    <div class="setting-info">
                        <label class="setting-label">Animaciones</label>
                        <span class="setting-description">Efectos visuales y transiciones</span>
                    </div>
                    <label class="switch">
                        <input type="checkbox" checked />
                        <span class="slider"></span>
                    </label>
                </div>
            </div>
        </div>

        <!-- CV Upload Section -->
        <div class="setting-card">
            <div class="setting-card-header">
                <div class="setting-icon">📄</div>
                <h3>Hoja de Vida</h3>
            </div>
            <div class="setting-items">
                <div class="setting-item-modern cv-upload-container">
                    <div class="setting-info">
                        <label class="setting-label">Sube tu CV</label>
                        <span class="setting-description">Formatos permitidos: PDF, DOC, DOCX (máx. 5MB)</span>
                        @if (!string.IsNullOrEmpty(resumeFileName))
                        {
                            <div class="resume-info-display">
                                <span class="resume-file-name">📎 @resumeFileName</span>
                                <button class="btn-remove-file" @onclick="RemoveResume" title="Eliminar CV">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <line x1="18" y1="6" x2="6" y2="18"></line>
                                        <line x1="6" y1="6" x2="18" y2="18"></line>
                                    </svg>
                                </button>
                            </div>
                        }
                    </div>
                    <div class="file-upload-wrapper">
                        <InputFile OnChange="HandleResumeUpload" 
                                   accept=".pdf,.doc,.docx" 
                                   class="file-input-hidden" 
                                   id="resumeUploadInput" />
                        <label for="resumeUploadInput" class="btn-upload-file">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                                <polyline points="17 8 12 3 7 8"></polyline>
                                <line x1="12" y1="3" x2="12" y2="15"></line>
                            </svg>
                            Seleccionar
                        </label>
                    </div>
                </div>
                @if (isUploadingResume)
                {
                    <div class="upload-progress-bar">
                        <div class="spinner-upload"></div>
                        <span>Subiendo archivo de forma segura...</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(uploadMessage))
                {
                    <div class="upload-message @uploadMessageClass">
                        @uploadMessage
                    </div>
                }
            </div>
        </div>

        <!-- Danger Zone -->
        <div class="setting-card danger-card">
            <div class="setting-card-header">
                <div class="setting-icon">⚠️</div>
                <h3>Zona de Peligro</h3>
            </div>
            <div class="setting-items">
                <div class="danger-item">
                    <div class="danger-info">
                        <h4>Borrar historial de conversaciones</h4>
                        <p>Esta acción eliminará todas tus conversaciones y no se puede deshacer.</p>
                    </div>
                    <button class="btn-danger-modern" @onclick="ClearHistory">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                            <path d="M3 6h18M19 6v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6m3 0V4a2 2 0 012-2h4a2 2 0 012 2v2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        Borrar historial
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="settings-footer-modern">
        <button class="btn-back-modern" @onclick="GoBack">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <path d="M19 12H5M12 19l-7-7 7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Volver al Chat
        </button>
    </div>
</div>

@code {
    private string? resumeFileName = null;
    private bool isUploadingResume = false;
    private string? uploadMessage = null;
    private string uploadMessageClass = "";

    protected override async Task OnInitializedAsync()
    {
        // Verificar autenticación
        if (!await AuthService.IsAuthenticatedAsync())
        {
            Navigation.NavigateTo("/", true);
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/chat/0", false);
    }

    private void ClearHistory()
    {
        // TODO: Implementar
        Console.WriteLine("Clearing history...");
    }

    private async Task HandleResumeUpload(InputFileChangeEventArgs e)
    {
        isUploadingResume = true;
        uploadMessage = null;
        StateHasChanged();

        try
        {
            var file = e.File;
            var userId = "1"; // TODO: Obtener del AuthService
            
            var (success, filePath, errorMessage) = await FileUploadService.UploadResumeAsync(file, userId);
            
            if (success)
            {
                resumeFileName = file.Name;
                uploadMessage = "✅ CV subido exitosamente y validado";
                uploadMessageClass = "success";
            }
            else
            {
                uploadMessage = $"❌ {errorMessage}";
                uploadMessageClass = "error";
            }
        }
        catch (Exception ex)
        {
            uploadMessage = $"❌ Error al subir el archivo: {ex.Message}";
            uploadMessageClass = "error";
        }
        finally
        {
            isUploadingResume = false;
            StateHasChanged();
        }
    }

    private async Task RemoveResume()
    {
        try
        {
            var userId = "1"; // TODO: Obtener del AuthService
            var success = await FileUploadService.DeleteResumeAsync(userId);
            
            if (success)
            {
                resumeFileName = null;
                uploadMessage = "✅ CV eliminado correctamente";
                uploadMessageClass = "success";
            }
            else
            {
                uploadMessage = "❌ Error al eliminar el CV";
                uploadMessageClass = "error";
            }
        }
        catch (Exception ex)
        {
            uploadMessage = $"❌ Error: {ex.Message}";
            uploadMessageClass = "error";
        }
        finally
        {
            StateHasChanged();
        }
    }
}

<style>
    /* ============================================
       MODERN SETTINGS STYLES
       ============================================ */

    .settings-modern-container {
        max-width: 900px;
        margin: 0 auto;
        padding: 2rem;
        background: #0a0a0a;
        min-height: 100vh;
        color: #fff;
    }

    .settings-header-modern {
        text-align: center;
        margin-bottom: 3rem;
        padding-bottom: 2rem;
        border-bottom: 2px solid #1a1a1a;
    }

    .header-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 20px;
        margin-bottom: 1.5rem;
        box-shadow: 0 8px 32px rgba(102, 126, 234, 0.3);
    }

    .header-icon svg {
        color: white;
    }

    .settings-header-modern h1 {
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
    }

    .settings-header-modern p {
        color: #9ca3af;
        font-size: 1.1rem;
    }

    /* Setting Cards */
    .setting-card {
        background: #111;
        border: 1px solid #1e1e1e;
        border-radius: 16px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }

    .setting-card:hover {
        border-color: #667eea;
        box-shadow: 0 4px 20px rgba(102, 126, 234, 0.1);
    }

    .setting-card-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #1e1e1e;
    }

    .setting-icon {
        font-size: 1.8rem;
        width: 48px;
        height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #1a1a1a;
        border-radius: 12px;
    }

    .setting-card-header h3 {
        font-size: 1.4rem;
        font-weight: 600;
        color: #fff;
        margin: 0;
    }

    /* Setting Items */
    .setting-items {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .setting-item-modern {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        background: #0a0a0a;
        border-radius: 12px;
        border: 1px solid #1a1a1a;
        transition: all 0.2s;
    }

    .setting-item-modern:hover {
        border-color: #374151;
        background: #0f0f0f;
    }

    .setting-info {
        flex: 1;
    }

    .setting-label {
        display: block;
        font-weight: 600;
        color: #fff;
        margin-bottom: 0.25rem;
        font-size: 1rem;
    }

    .setting-description {
        display: block;
        font-size: 0.875rem;
        color: #9ca3af;
    }

    /* Toggle Switch */
    .switch {
        position: relative;
        display: inline-block;
        width: 52px;
        height: 28px;
        flex-shrink: 0;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #374151;
        transition: 0.3s;
        border-radius: 28px;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 20px;
        width: 20px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        transition: 0.3s;
        border-radius: 50%;
    }

    input:checked + .slider {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    input:checked + .slider:before {
        transform: translateX(24px);
    }

    /* Select Modern */
    .select-modern {
        padding: 0.625rem 1rem;
        background: #0a0a0a;
        border: 1px solid #374151;
        border-radius: 8px;
        color: #fff;
        font-size: 0.95rem;
        cursor: pointer;
        transition: all 0.2s;
        min-width: 150px;
    }

    .select-modern:hover {
        border-color: #667eea;
    }

    .select-modern:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    /* Danger Zone */
    .danger-card {
        border-color: #991b1b;
        background: linear-gradient(135deg, rgba(153, 27, 27, 0.1) 0%, rgba(127, 29, 29, 0.05) 100%);
    }

    .danger-card:hover {
        border-color: #dc2626;
        box-shadow: 0 4px 20px rgba(220, 38, 38, 0.2);
    }

    .danger-item {
        padding: 1.5rem;
        background: #0a0a0a;
        border-radius: 12px;
        border: 1px solid #991b1b;
    }

    .danger-info h4 {
        font-size: 1.1rem;
        font-weight: 600;
        color: #fff;
        margin-bottom: 0.5rem;
    }

    .danger-info p {
        color: #9ca3af;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }

    .btn-danger-modern {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: #dc2626;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        font-size: 0.95rem;
        transition: all 0.2s;
    }

    .btn-danger-modern:hover {
        background: #b91c1c;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(220, 38, 38, 0.4);
    }

    .btn-danger-modern:active {
        transform: translateY(0);
    }

    /* Footer */
    .settings-footer-modern {
        text-align: center;
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 2px solid #1a1a1a;
    }

    .btn-back-modern {
        display: inline-flex;
        align-items: center;
        gap: 0.625rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 0.875rem 2rem;
        border-radius: 12px;
        cursor: pointer;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s;
        box-shadow: 0 4px 16px rgba(102, 126, 234, 0.3);
    }

    .btn-back-modern:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 24px rgba(102, 126, 234, 0.4);
    }

    .btn-back-modern:active {
        transform: translateY(0);
    }

    /* CV Upload Styles */
    .cv-upload-container {
        flex-direction: column;
        align-items: stretch !important;
    }

    .file-upload-wrapper {
        margin-top: 1rem;
        display: flex;
        justify-content: flex-end;
    }

    .file-input-hidden {
        display: none;
    }

    .btn-upload-file {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        font-size: 0.95rem;
        transition: all 0.3s;
        box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
    }

    .btn-upload-file:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 16px rgba(102, 126, 234, 0.4);
    }

    .resume-info-display {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-top: 0.75rem;
        padding: 0.75rem;
        background: rgba(102, 126, 234, 0.1);
        border: 1px solid #667eea;
        border-radius: 8px;
    }

    .resume-file-name {
        flex: 1;
        color: #667eea;
        font-weight: 500;
        font-size: 0.95rem;
    }

    .btn-remove-file {
        background: #dc2626;
        color: white;
        border: none;
        width: 28px;
        height: 28px;
        border-radius: 6px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
        flex-shrink: 0;
    }

    .btn-remove-file:hover {
        background: #b91c1c;
        transform: scale(1.05);
    }

    .upload-progress-bar {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: rgba(102, 126, 234, 0.1);
        border: 1px solid #667eea;
        border-radius: 8px;
        color: #667eea;
    }

    .spinner-upload {
        width: 20px;
        height: 20px;
        border: 3px solid rgba(102, 126, 234, 0.3);
        border-top-color: #667eea;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    .upload-message {
        padding: 0.75rem 1rem;
        border-radius: 8px;
        font-weight: 500;
        font-size: 0.95rem;
    }

    .upload-message.success {
        background: rgba(16, 185, 129, 0.1);
        border: 1px solid #10b981;
        color: #10b981;
    }

    .upload-message.error {
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid #ef4444;
        color: #ef4444;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .settings-modern-container {
            padding: 1rem;
        }

        .setting-item-modern {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

        .file-upload-wrapper {
            justify-content: center;
            width: 100%;
        }
    }
</style>
